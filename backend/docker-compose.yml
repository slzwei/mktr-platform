version: "3.9"

services:
  db:
    image: postgres:15
    ports: [ "55432:5432" ]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 20

  auth:
    build: { context: ../services/auth-service, dockerfile: Dockerfile }
    environment:
      PORT: "4001"
      AUTH_ISSUER: "http://auth:4001"
      AUTH_AUDIENCE: "mktr-platform"
    ports: [ "4001:4001" ]
    depends_on: { db: { condition: service_healthy } }

  monolith:
    build: { context: ., dockerfile: Dockerfile }
    environment:
      PORT: "3001"
      ENABLE_DOMAIN_PREFIXES: "true"
      ENABLE_LEGACY_LEADGEN: "true"
      AUTH_JWKS_URL: "http://auth:4001/.well-known/jwks.json"
      AUTH_ISSUER: "http://auth:4001"
      AUTH_AUDIENCE: "mktr-platform"
      DATABASE_URL: "postgres://postgres:postgres@db:5432/postgres"
    ports: [ "3301:3001" ]
    depends_on:
      db: { condition: service_healthy }
      auth: { condition: service_started }

  leadgen:
    build: { context: ../services/leadgen-service, dockerfile: Dockerfile }
    environment:
      PORT: "4002"
      DATABASE_URL: "postgres://postgres:postgres@db:5432/postgres"
      PG_SCHEMA: "leadgen"
      AUTH_JWKS_URL: "http://auth:4001/.well-known/jwks.json"
      AUTH_ISSUER: "http://auth:4001"
      AUTH_AUDIENCE: "mktr-platform"
    expose: [ "4002" ]
    depends_on:
      db: { condition: service_healthy }
      auth: { condition: service_started }

  gateway:
    build: { context: ../services/gateway, dockerfile: Dockerfile }
    environment:
      PORT: "4000"
      AUTH_JWKS_URL: "http://auth:4001/.well-known/jwks.json"
      AUTH_ISSUER: "http://auth:4001"
      AUTH_AUDIENCE: "mktr-platform"
      MONOLITH_URL: "http://monolith:3001"
      LEADGEN_URL: "http://leadgen:4002"
    ports: [ "4000:4000" ]
    depends_on:
      auth: { condition: service_started }
      monolith: { condition: service_started }
      leadgen: { condition: service_started }
