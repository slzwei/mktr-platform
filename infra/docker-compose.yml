services:
  db:
    image: postgres:15-alpine
    container_name: mktr-postgres
    environment:
      POSTGRES_USER: mktr
      POSTGRES_PASSWORD: mktr
      POSTGRES_DB: mktr
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mktr"]
      interval: 3s
      timeout: 3s
      retries: 20
    ports: ["5433:5432"]
    volumes: [postgres_data:/var/lib/postgresql/data]

  redis:
    image: redis:7-alpine
    container_name: mktr-redis
    command: ["redis-server", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 20
    ports: ["6379:6379"]

  auth:
    container_name: mktr-auth
    build: { context: ../services/auth-service }
    environment:
      PORT: 4001
      AUTH_ISSUER: http://auth:4001
      AUTH_AUDIENCE: mktr
    ports: ["4001:4001"]
    depends_on:
      db: { condition: service_healthy }

  monolith:
    container_name: mktr-monolith
    build: { context: ../backend }
    environment:
      PORT: 3001
      ENABLE_DOMAIN_PREFIXES: "true"
      ENABLE_AUTH_MAPPING: "true"
      ENABLE_LEGACY_LEADGEN: "true"
      MANIFEST_ENABLED: ${MANIFEST_ENABLED:-"false"}
      BEACONS_ENABLED: ${BEACONS_ENABLED:-"false"}
      MANIFEST_REFRESH_SECONDS: ${MANIFEST_REFRESH_SECONDS:-"300"}
      MANIFEST_RPS_PER_DEVICE: ${MANIFEST_RPS_PER_DEVICE:-"2"}
      BEACON_IDEMP_WINDOW_MIN: ${BEACON_IDEMP_WINDOW_MIN:-"10"}
      BEACON_RPS_PER_DEVICE: ${BEACON_RPS_PER_DEVICE:-"5"}
      AUTH_JWKS_URL: http://auth:4001/.well-known/jwks.json
      AUTH_ISSUER: http://auth:4001
      AUTH_AUDIENCE: mktr
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: mktr
      DB_USER: mktr
      DB_PASSWORD: mktr
      REDIS_URL: redis://redis:6379/0
      GATEWAY_INTERNAL_URL: http://gateway:4000
    ports: ["3301:3001"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3001/api/adtech/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
    restart: on-failure
    depends_on:
      db: { condition: service_healthy }
      auth: { condition: service_started }

  leadgen:
    container_name: mktr-leadgen
    build: { context: ../services/leadgen-service }
    environment:
      PORT: 4002
      LOG_LEVEL: info
      DATABASE_URL: postgres://mktr:mktr@db:5432/mktr
      PG_SCHEMA: leadgen
      AUTH_JWKS_URL: http://auth:4001/.well-known/jwks.json
      AUTH_ISSUER: http://auth:4001
      AUTH_AUDIENCE: mktr
      LEADGEN_RPS_LIST: "1"
      LEADGEN_RPS_CREATE: "5"
      LEADGEN_IDEMP_WINDOW_HOURS: "24"
    ports: ["4002:4002"]
    depends_on:
      db: { condition: service_healthy }
      auth: { condition: service_started }

  gateway:
    container_name: mktr-gateway
    build: { context: ../services/gateway }
    environment:
      PORT: 4000
      AUTH_JWKS_URL: http://auth:4001/.well-known/jwks.json
      AUTH_ISSUER: http://auth:4001
      AUTH_AUDIENCE: mktr
      MONOLITH_URL: http://monolith:3001
      AUTH_URL: http://auth:4001
      LEADGEN_URL: http://leadgen:4002
    ports: ["4000:4000"]
    depends_on:
      auth: { condition: service_started }
      monolith: { condition: service_started }
      leadgen: { condition: service_started }

volumes:
  postgres_data:
